1ST ONE

import numpy as np
from sklearn.linear_model import LinearRegression, QuantileRegressor

# Sample data (replace with your actual data)
X = np.array([[1], [2], [3], [4], [5]])
y = np.array([2, 4, 5, 4, 5])

# Standard linear regression
model_lr = LinearRegression()
model_lr.fit(X, y)

# Prediction for a new data point (x = 6)
new_x = np.array([[6]])
y_pred_lr = model_lr.predict(new_x)[0]
print("Standard linear regression prediction:", y_pred_lr)

# Quantile regression (median)
model_qr_median = QuantileRegressor(quantile=0.5)
model_qr_median.fit(X, y)

# Prediction for a new data point (x = 6)
y_pred_qr_median = model_qr_median.predict(new_x)[0]
print("Quantile regression (median) prediction:", y_pred_qr_median)

# Note on Modal Regression:
# While there isn't a built-in function in scikit-learn for modal regression,
# you can explore libraries like scikit-extras or implement custom solutions
# to estimate the conditional mode of the response variable. 
